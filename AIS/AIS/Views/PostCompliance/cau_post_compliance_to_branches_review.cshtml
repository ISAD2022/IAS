@{
    ViewData["Title"] = "Review CAU Paras Branch Reply";
    Layout = "_Layout";
}
<head>
    <style type="text/css">
        .evidence-link {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .evidence-icon {
            margin-right: 10px;
        }
    </style>

</head>
<script type="text/javascript">
    var g_newParaId = 0;
    var g_comId = 0;
    var g_oldParaId = 0;
    var g_brEntId = 0;

    $(document).ready(function () {
        getOwnParasForCompliance();
    });
    function getOwnParasForCompliance() {
        $('#manageObsPanel tbody').empty();
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_cau_paras_for_compliance_for_review",
            type: "POST",
            data: {

            },
            cache: false,
            success: function (data) {
                g_obsList = data;

                $.each(data, function (index, child) {

                    $('#manageObsPanel tbody').append('<tr id="div_' + child.id + '"><td>' + ++index + '</td><td><p class="fw-normal mb-1">' + child.audiT_PERIOD + '</p></td><td><p class="fw-normal mb-1">' + child.parA_NO + '</p></td><td><p class="fw-normal mb-1">' + child.gisT_OF_PARAS + '</p></td><td class="text-center"><a href="#" onclick="event.preventDefault();viewParaDetails(' + child.neW_PARA_ID + ',' + child.olD_PARA_ID + ',\'' + child.coM_ID + '\',\'' + child.indicator + '\',\'' + child.parA_NO + '\',\'' + child.caU_ASSIGNED_ENT_ID + '\', );" class="text-hover text-danger mr-5px"><small>Review</small></a></td></tr>');
                });

                $('#manageObsPanel').DataTable({
                    dom: '<"top"lfB>rt<"bottom"ip><"clear">',
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            text: 'Export to Excel',
                            className: 'btn btn-success',
                            exportOptions: {
                                columns: function (idx, data, node) {
                                    // Exclude columns with the class 'hide-export'
                                    return !$(node).hasClass('hide-export');
                                }
                            }
                        },
                        {
                            extend: 'pdfHtml5',
                            text: 'Export To PDF',
                            className: 'btn btn-danger',
                            exportOptions: {
                                columns: function (idx, data, node) {
                                    // Exclude columns with the class 'hide-export'
                                    return !$(node).hasClass('hide-export');
                                }
                            }
                        }
                    ],
                    lengthMenu: [
                        [10, 50, 100, -1],
                        [10, 50, 100, "All"]
                    ]
                });

            },

            dataType: "json",
        });
    }
    function viewParaDetails(newParaId = 0, oldParaId = 0, comID, indicator, paraNo, brId) {

        g_newParaId = newParaId;
        g_oldParaId = oldParaId;
        g_comId = comID;
        g_indicator = indicator;
        g_brEntId = brId;
        $('#viewParaComplianceModel').modal('show');
        $('#viewParaNoModelField').val(paraNo);
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_cau_para_to_branch_para_text",
            type: "POST",
            data: {
                'COM_ID': g_comId,
                'INDICATOR': g_indicator
            },
            cache: false,
            success: function (data) {
                $('#viewParaTextModelField').html(data.memO_TXT);
                $('#branchReplyAgainstCAUIns').html(data.brancH_REPLY);
                $('#cauInstructionToBranch').val(data.caU_INSTRUCTION);
                $('#complianceCycleEvidences').empty();
                $.ajax({
                    url: g_asiBaseURL + "/ApiCalls/get_cau_paras_evidences_for_compliance_for_review",
                    type: "POST",
                    data: {
                        'TEXT_ID': data.texT_ID
                    },
                    cache: false,
                    success: function (data) {
                        if (data.length > 0) {

                            $.each(data, function (j, pp) {
                                var extension = pp.imagE_NAME.split('.').pop().toLowerCase();
                                const contentType = getContentType(extension);

                                // Create and append the attachment item
                                const container = document.createElement('div');
                                container.className = 'evidence-link';

                                // Add icon
                                const icon = document.createElement('i');
                                icon.className = getIconClass(extension) + ' evidence-icon';
                                container.appendChild(icon);

                                // Add label
                                const label = document.createElement('span');
                                label.innerText = pp.imagE_NAME;
                                label.classList.add('text-primary');

                                // Add cursor style to make it look like a link
                                label.style.cursor = 'pointer';
                                container.appendChild(label);

                                // Add click event to download file on selection
                                container.addEventListener('click', function () {
                                    downloadFile(pp.filE_ID);
                                });

                                $('#complianceCycleEvidences').append(container);
                            });
                        } else {
                            $('#complianceCycleEvidences').append("<i>No evidence is attached </i>");
                        }
                    },
                    dataType: "json",
                });

            },
            dataType: "json",
        });

    }
    function reloadLocation() {
        $('#viewParaComplianceModel').modal('hide');
        window.location.reload();
    }
   
    function getFileExtension(file) {
        var fileName = file.name;
        var extension = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase();
        return extension;
    }
    function getIconClass(extension) {
        switch (extension) {
            case 'pdf': return 'fa fa-file-pdf';
            case 'zip': return 'fa fa-file-archive';
            case 'png':
            case 'jpg':
            case 'jpeg':
            case 'bmp': return 'fa fa-file-image';
            case 'doc':
            case 'docx': return 'fa fa-file-word';
            default: return 'fa fa-file';
        }
    }
    function getContentType(extension) {
        switch (extension) {
            case 'pdf': return 'application/pdf';
            case 'zip': return 'application/zip';
            case 'png': return 'image/png';
            case 'doc': return 'application/msword';
            case 'docx': return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
            default: return 'application/octet-stream';
        }
    }
    function generateUniqueTimestamp() {
        var date = new Date();
        var year = date.getFullYear();
        var month = ('0' + (date.getMonth() + 1)).slice(-2);
        var day = ('0' + date.getDate()).slice(-2);
        var hours = ('0' + date.getHours()).slice(-2);
        var minutes = ('0' + date.getMinutes()).slice(-2);
        var seconds = ('0' + date.getSeconds()).slice(-2);
        var milliseconds = ('00' + date.getMilliseconds()).slice(-3);

        var timestamp = year + month + day + '_' + hours + minutes + seconds + milliseconds;
        return timestamp;
    }

    function base64ToBlob(base64, contentType) {
        const byteCharacters = atob(base64);
        const byteArrays = [];

        for (let offset = 0; offset < byteCharacters.length; offset += 512) {
            const slice = byteCharacters.slice(offset, offset + 512);

            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        const blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }
    function deleteFileFromServer(fileName) {

        if (fileName != null || fileName != "" || typeof fileName != "undefined") {
            $.ajax({
                url: g_asiBaseURL + "/UploadFile/DeleteFile",
                type: "POST",
                data: {
                    'fileName': fileName,
                    'subFolder': g_comId
                },
                cache: false,
                success: function (data) {


                },

                dataType: "json",
            });
        }




    }
    function downloadFile(id) {
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_post_compliance_evidence_data",
            type: "POST",
            data: {
                'FILE_ID': id,
            },
            cache: false,
            success: function (data) {
                var extension = data.imagE_NAME.split('.').pop().toLowerCase();
                const contentType = getContentType(extension);

                const blob = base64ToBlob(data.imagE_DATA, contentType);
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = data.imagE_NAME;
                link.click(); // Trigger the download

            },
            dataType: "json",
        });


    }

    function CAUSubmitParaToBranch() {

      

        if ($('#cauFurtherInstruction').val() == "") {
            alert("Please provide instructions to proceed");
            return;
        }
        $('#submitCAUParaResponseHandler').attr("disabled", true);
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/submit_cau_para_to_branch",
            type: "POST",
            data: {
                'COM_ID': g_comId,
                'BR_ENT_ID': g_brEntId,
                'CAU_COMMENTS': $('#cauFurtherInstruction').val()
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                $('#submitCAUParaResponseHandler').attr("disabled", false);
                onAlertCallback(reloadLocation);
            }, error: function (jqXHR, textStatus, errorThrown) {
                $('#submitCAUParaResponseHandler').attr("disabled", false);
                alert("An error occurred: " + jqXHR.status + " " + errorThrown);


            },
            dataType: "json",
        });
    }
</script>


<div class="row">
    <div id="ownCompliancePanel" class="row col-md-12 mt-3">
        <h3 style=" display:block;color: #45c545;">LIST OF OUTSTANADING @ViewData["UserEntityName"] COMPLIANCES </h3>
        <table id="manageObsPanel" class="display">
            <thead style="background-color: rgb(181 229 117 / 93%) !important; ">
                <tr>
                    <th class="col-md-auto">Sr No.</th>
                    <th class="col-md-auto">Audit Period</th>
                    <th class="col-md-auto">Para No.</th>
                    <th class="col-md-auto">Title / Gist</th>
                    <th class="col-md-auto hide-export">Action</th>
                </tr>
            </thead>
            <tbody></tbody>

        </table>
    </div>
</div>

<div id="viewParaComplianceModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document" style="min-width:95% !important;">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Para Submission to Branch</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="viewParaNoModelField">Para Number</label>
                        <input id="viewParaNoModelField" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group">
                        <label for="viewParaTextModelField">Para Text</label>
                        <div id="viewParaTextModelField" disabled="disabled" class="form-control container-clob"></div>
                    </div>
                    <div class="form-group">
                        <label for="controlingsearch">CAU Previous Instructions</label>
                        <textarea id="cauInstructionToBranch" class="form-control" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="branchReplyAgainstCAUIns">Branch Reply</label>
                        <div id="branchReplyAgainstCAUIns" disabled="disabled" class="form-control container-clob"></div>
                    </div>
                    <div class="form-group mt-3">
                        <label for="complianceCycleEvidences">Evidence</label>
                        <div class="row col-md-12 mt-3 mb-3">
                            <div id="complianceCycleEvidences">
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="controlingsearch">CAU Comments</label>
                        <textarea id="cauFurtherInstruction" class="form-control" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="submitCAUParaResponseHandler" onclick="CAUSubmitParaToBranch();" type="button" class="btn btn-danger">Reject/Refer Back Branch Reponse </button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
