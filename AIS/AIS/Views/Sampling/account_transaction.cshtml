@{
    ViewData["Title"] = "Account Transaction Details";
    Layout = "_Layout";
}

<script type="text/javascript">
    var g_engId = 0;
    var g_accountNo = 0;

    $(document).ready(function () {
        var url_string = window.location.href;
        var url = new URL(url_string);
        g_engId = url.searchParams.get("engId");
        g_accountNo = url.searchParams.get("acNo");
        loadAccountTransactions();
    });

    function loadAccountTransactions() {
        destroyDatatable('account_transaction_list');
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_biomet_account_transaction_sampling_details",
            type: "POST",
            data: {
                ENG_ID: g_engId,
                AC_NO: g_accountNo
            },
            success: function (data) {
                if (data.length > 0) {
                    populateTable(data);
                }
            },
            error: function (xhr, status, error) {
                console.error("Error fetching data:", error);
            }
        });
    }

    function populateTable(data) {
        var tableBody = $("#account_transaction_list tbody");
      //  tableBody.empty(); // Clear existing rows

        $.each(data, function (index, item) {
            var row = `<tr>
                <td>${index + 1}</td>
                <td>${item.transactionMasterCode}</td>
                <td>${item.description}</td>
                <td>${item.remarks}</td>
                <td>${formatDate(item.transactionDate)}</td>
                <td>${formatDate(item.authorizationDate)}</td>
                <td>${formatAmount(item.drAmount)}</td>
                <td>${formatAmount(item.crAmount)}</td>
                <td>${item.toAccountId}</td>
                <td>${item.toAccountTitle}</td>
                <td>${item.toAccountNo}</td>
                <td>${item.toAccBranchId}</td>
                <td>${item.instrumentNo}</td>
            </tr>`;
            tableBody.append(row);
        });
        initializeDataTable('account_transaction_list');
    }

    function formatDate(dateString) {
        if (!dateString || dateString.trim() === "") return "";
        let date = new Date(dateString);
        return date.toLocaleDateString(); // Adjust format as needed
    }

    function formatAmount(amount) {
        return amount ? parseFloat(amount).toFixed(2) : "0.00";
    }
</script>

<div class="row col-md-12 mt-3">

    <h3 style="color: #45c545;">List of Account Transactions</h3>
</div>

<div class="row col-md-12 mt-3">
    <table id="account_transaction_list" class="table table-hover table-bordered table-striped">
        <thead style="background-color: rgb(181 229 117 / 93%) !important;">
            <tr>
                <th>Sr No</th>
                <th>Transaction Code</th>
                <th>Description</th>
                <th>Remarks</th>
                <th>Transaction Date</th>
                <th>Authorization Date</th>
                <th>Debit Amount</th>
                <th>Credit Amount</th>
                <th>To Account ID</th>
                <th>To Account Title</th>
                <th>To Account No</th>
                <th>Branch ID</th>
                <th>Instrument No</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>