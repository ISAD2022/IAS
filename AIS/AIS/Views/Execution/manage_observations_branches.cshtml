@{
    ViewData["Title"] = "Manage Observations for Branches";
    Layout = "_Layout";
}
<style type="text/css">
    .evidence-link {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .evidence-icon {
        margin-right: 10px;
    }
</style>


<script type="text/javascript">
    var g_obsId = 0;
    var g_newStatusId = 0;
    var g_riskId = 0;
    var g_currentStatus = 0;
    var g_obsList = [];
    $(document).ready(function () {
        $('#entitySelectField').select2();
        var entName = $('#manageObsPanel tbody .entity_name_field:first').text();
        $('#entityNameField').val(entName);
        var periodName = $('#manageObsPanel tbody .period_name_field:first').text();
        $('#auditPeriodNameField').val(periodName);


        $('#updateMemoContent').richText({
            imageUpload: false,
            fileUpload: false,
            videoEmbed: false,
            urls: false
        });
    });
    function reloadLocation() {
        getEntityObservation();
    }
    function getSubProcessList() {
        if ($('#updateMemo_process option:selected').val() == 0) {
            $('#updateMemo_subprocess').empty();
            $('#updateMemo_violation').empty();
        }
        else {

            $('#updateMemo_subprocess').empty();
            $('#updateMemo_violation').empty();
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/sub_checklist",
                type: "POST",
                data: {
                    'T_ID': $('#updateMemo_process option:selected').val(),
                },
                cache: false,
                success: function (data) {
                    $('#updateMemo_subprocess').append("<option value=\"0\" id=\"0\">--Select Sub Group--</option>");
                    $.each(data, function (index, item) {
                        $('#updateMemo_subprocess').append("<option value=\"" + item.s_ID + "\"> " + item.heading + " </option > ");
                    });

                },
                dataType: "json",
            });
        }
    }
    function getSubProcessViolationList() {
        if ($('#updateMemo_subprocess option:selected').val() == 0)
            $('#updateMemo_violation').empty();
        else {
            $('#updateMemo_violation').empty();
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/checklist_details",
                type: "POST",
                data: {
                    'S_ID': $('#updateMemo_subprocess option:selected').val(),
                },
                cache: false,
                success: function (data) {
                    $('#updateMemo_violation').append("<option value=\"0\" id=\"0\">--Select Sub Group--</option>");
                    $.each(data, function (index, item) {
                        $('#updateMemo_violation').append("<option value=\"" + item.id + "\"> " + item.heading + "</option>");
                    });

                },
                dataType: "json",
            });
        }


    }

    function ObservationViewerPanel(obs_id, status_id, risk_id) {
        g_obsId = obs_id;
        g_riskId = risk_id;
        g_currentStatus = status_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_observation_text_branches",
            type: "POST",
            data: {
                'OBS_ID': obs_id
            },
            cache: false,
            success: function (data) {
                $('#viewMemoModel').modal('show');
                $('#viewMemo_memo').html(data[0].obS_TEXT);
                $('#viewMemo_response').html(data[0].obS_REPLY);


                $('#viewMemo_annex').val(data[0].annexurE_ID);
                $('#viewMemo_risk').val(data[0].obS_RISK_ID);

                $('#viewMemo_process').html(data[0].process);
                $('#viewMemo_subprocess').html(data[0].suB_PROCESS);
                $('#viewMemo_violation').html(data[0].checklist_Details);
                $('#listofRespPersons tbody').empty();
                if (data[0].responsiblE_PPs.length > 0) {
                    $.each(data[0].responsiblE_PPs, function (j, pp) {
                        var srNo = $('#listofRespPersons tbody tr').length;
                        srNo++;
                        $('#listofRespPersons tbody').append('<tr id="tr_' + pp.pP_NO + '"><td>' + srNo + '</td><td>' + pp.pP_NO + '</td><td>' + pp.emP_NAME + '</td><td>' + pp.loaN_CASE + '</td><td>' + pp.lC_AMOUNT + '</td><td>' + pp.accounT_NUMBER + '</td><td>' + pp.acC_AMOUNT + '</td></tr>');
                    });
                }

                if (g_currentStatus == 1) {
                    $('#dropButton_memoReply').removeClass('d-none');
                    $('#submitAuditeeButton_memoReply').removeClass('d-none');

                }
                else if (g_currentStatus == 3) {
                    if (g_riskId == 3) {
                        $('#dropButton_memoReply').addClass('d-none');
                        $('#submitAuditeeButton_memoReply').addClass('d-none');

                    }
                    else {
                        $('#dropButton_memoReply').addClass('d-none');
                        $('#submitAuditeeButton_memoReply').addClass('d-none');
                    }

                }
                else {
                    $('#dropButton_memoReply').addClass('d-none');
                    $('#submitAuditeeButton_memoReply').addClass('d-none');
                }
                $('#complianceCycleEvidences').empty();
                if (data[0].attacheD_EVIDENCES.length > 0) {
                    $.each(data[0].attacheD_EVIDENCES, function (i, pp) {

                        var extension = pp.imagE_NAME.split('.').pop().toLowerCase();
                        const contentType = getContentType(extension);

                        // Create and append the attachment item
                        const container = document.createElement('div');
                        container.className = 'evidence-link';

                        // Add icon
                        const icon = document.createElement('i');
                        icon.className = getIconClass(extension) + ' evidence-icon';
                        container.appendChild(icon);

                        // Add label
                        const label = document.createElement('span');
                        label.innerText = pp.imagE_NAME;
                        label.classList.add('text-primary');

                        // Add cursor style to make it look like a link
                        label.style.cursor = 'pointer';
                        container.appendChild(label);

                        // Add click event to download file on selection
                        container.addEventListener('click', function () {
                            downloadFile(pp.filE_ID);
                        });

                        $('#complianceCycleEvidences').append(container);
                    });
                }
                else {
                    $('#complianceCycleEvidences').append("<i>No evidence is attached </i>");
                }
            },
            dataType: "json",
        });

    }
    function ObservationUpdatePanel(obs_id) {
        g_obsId = obs_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_observation_text_branches",
            type: "POST",
            data: {
                'OBS_ID': obs_id
            },
            cache: false,
            success: function (data) {
                $('#updateMemoModel').modal('show');
                $('#updateMemoContent').val(data[0].obS_TEXT).trigger('change');
                $('#updateMemo_heading').val(data[0].heading);
                $('#updateMemo_process').val(data[0].procesS_ID);
                $('#updateMemo_risk').val(data[0].obS_RISK_ID);
                $('#updateMemo_annex').val(data[0].annexurE_ID);
                $('#updateMemo_subprocess').empty();
                $('#updateMemo_subprocess').append('<option value="0">' + data[0].suB_PROCESS + '</option>');
                $('#updateMemo_violation').empty();
                $('#updateMemo_violation').append('<option value="0">' + data[0].checklist_Details + '</option>');
            },
            dataType: "json",
        });

    }
    function finalCommentsButtonSave() {
        if ($('#commentAreaInCommentsBox').val() == "") {
            alert("Auditor Comments are Mandatory");
            return;
        }
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/update_observation_status",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId,
                'AUDITOR_COMMENT': $('#commentAreaInCommentsBox').val()
            },
            cache: false,
            success: function (data) {
                if (data.Status == true) {
                    alert(data.Message);
                    onAlertCallback(reloadLocation);
                } else {
                    alert("Failed!! please try again");
                    onAlertCallback(reloadLocation);
                }
            },
            dataType: "json",
        });
    }
    function updateObservationStatus(obs_id, new_status_id, risk_id) {
        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $('#commentsBox').modal('show');
        $('#commentAreaInCommentsBox').val('');

    }
    function dropObservation(obs_id, new_status_id, risk_id) {
        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/drop_observation",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
            },
            dataType: "json",
        });
    }
    function submitObservationToAuditee(obs_id, new_status_id, risk_id) {
        $('#submitAuditeeButton_memoReply').attr('disabled', 'disabled');
        g_obsId = obs_id;
        g_newStatusId = new_status_id;
        g_riskId = risk_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/submit_observation_to_auditee",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'NEW_STATUS_ID': g_newStatusId,
                'RISK_ID': g_riskId
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
                $('#submitAuditeeButton_memoReply').removeAttr('disabled');
            },
            dataType: "json",
        });
    }
    function finalUpdateMemoContent(obs_id) {
        g_obsId = obs_id;
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/update_observation_text",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'OBS_TITLE': $('#updateMemo_heading').val(),
                'OBS_TEXT': $('.richText-editor').html(),
                'ANNEXURE_ID': $('#updateMemo_annex').val(),
                'RISK_ID': $('#updateMemo_risk').val(),
                'PROCESS_ID': $('#updateMemo_process').val(),
                'SUBPROCESS_ID': $('#updateMemo_subprocess').val(),
                'CHECKLIST_ID': $('#updateMemo_violation').val()
            },
            cache: false,
            success: function (data) {
                alert(data.Message);
                onAlertCallback(reloadLocation);
            },
            dataType: "json",
        });

    }
    function getEntityObservation() {
        destroyDatatable('manageObsPanel');
        if ($('#entitySelectField option:selected').val() != 0) {
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/get_observation_branches",
                type: "POST",
                data: {
                    'ENG_ID': $('#entitySelectField option:selected').val()
                },
                cache: false,
                success: function (data) {
                    g_obsList = data;
                    $.each(data, function (i, v) {
                        $('#auditPeriodNameField').val(v.period);
                        $('#manageObsPanel tbody').append(' <tr id="' + v.obS_ID + '"><td class="text-center">' + v.memO_NO + '</td><td>' + v.heading + '</td><td>' + v.nO_OF_INSTANCES + '</td><td>' + v.obS_RISK + '</td><td>' + v.obS_STATUS + '</td><td class="text-center"><a onclick="event.preventDefault();ObservationViewerPanel(' + v.obS_ID + ',' + v.obS_STATUS_ID + ', ' + v.obS_RISK_ID + ')" href="#" class="text-hover">View Memo</a></td><td><a onclick="ObservationUpdatePanel(' + v.obS_ID + ')" href="#" class="text-hover">Update Memo</a></td></tr>');
                    });

                    initializeDataTable('manageObsPanel');

                    setTimeout(function () {
                        if (g_obsId != 0) {
                            var rowpos = $('#manageObsPanel tbody tr#' + g_obsId).position();
                            $('html').scrollTop(rowpos.top);
                        }
                    }, 200)



                },
                dataType: "json",
            });

        }
    }

    function createDSA(obsId) {
        window.location.href = g_asiBaseURL + "/Execution/create_dsa?obsId=" + g_obsId;
    }

    function downloadFile(id) {
        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_auditee_evidence_data",
            type: "POST",
            data: {
                'FILE_ID': id,
            },
            cache: false,
            success: function (data) {
                var extension = data.imagE_NAME.split('.').pop().toLowerCase();
                const contentType = getContentType(extension);

                const blob = base64ToBlob(data.imagE_DATA, contentType);
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = data.imagE_NAME;
                link.click(); // Trigger the download

            },
            dataType: "json",
        });


    }
    function getFileExtension(file) {
        var fileName = file.name;
        var extension = fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase();
        return extension;
    }
    function getIconClass(extension) {
        switch (extension) {
            case 'pdf': return 'fa fa-file-pdf';
            case 'zip': return 'fa fa-file-archive';
            case 'png':
            case 'jpg':
            case 'jpeg':
            case 'bmp': return 'fa fa-file-image';
            case 'doc':
            case 'docx': return 'fa fa-file-word';
            default: return 'fa fa-file';
        }
    }
    function getContentType(extension) {
        switch (extension) {
            case 'pdf': return 'application/pdf';
            case 'zip': return 'application/zip';
            case 'png': return 'image/png';
            case 'doc': return 'application/msword';
            case 'docx': return 'application/vnd.openxmlformats-officedocument.wordprocessingml.document';
            default: return 'application/octet-stream';
        }
    }
    function base64ToBlob(base64, contentType) {
        const byteCharacters = atob(base64);
        const byteArrays = [];

        for (let offset = 0; offset < byteCharacters.length; offset += 512) {
            const slice = byteCharacters.slice(offset, offset + 512);

            const byteNumbers = new Array(slice.length);
            for (let i = 0; i < slice.length; i++) {
                byteNumbers[i] = slice.charCodeAt(i);
            }

            const byteArray = new Uint8Array(byteNumbers);
            byteArrays.push(byteArray);
        }

        const blob = new Blob(byteArrays, { type: contentType });
        return blob;
    }
</script>

<div class="row">
    <div class="col-md-12 mt-3">
        <h3 style=" display:block;color: #45c545;">Manage Audit Observations</h3>
    </div>
    <div class="row col-md-12 mt-3">
        <div class="col-md-2">
            <label><b>Entity:</b></label>
        </div>
        <div class="col-md-10">
            <input id="entityNameField" disabled="disabled" class="form-control ml-1 d-none" type="text" />
            <select id="entitySelectField" onchange="getEntityObservation()" class="form-control form-select">
                <option value="0" id="0">--Select Audit Entity--</option>
                @{
                    if (ViewData["EntitiesList"] != null)
                    {
                        foreach (var item in (dynamic)(ViewData["EntitiesList"]))
                        {
                            <option value="@item.ENG_ID" id="@item.ENG_ID">@item.NAME</option>
                        }
                    }
                }

            </select>
        </div>
    </div>
    <div class="row col-md-12 mt-3">
        <div class="col-md-2">
            <label><b>Audit Period:</b></label>
        </div>
        <div class="col-md-10 ">
            <input id="auditPeriodNameField" disabled="disabled" class="form-control ml-1" type="text" />
        </div>
    </div>
    <div class="row col-md-12 mt-3">
        <table id="manageObsPanel" class="table table-hover table-bordered table-hover mt-3 table-striped">
            <thead style="background-color: rgb(181 229 117 / 93%) !important; ">
                <tr>
                    <th class="col-md-auto">Memo No.</th>
                    <th class="col-md-auto">Title of Observation</th>
                    <th class="col-md-auto">No. of Instances</th>

                    <th class="col-md-auto">Risk Category</th>
                    <th class="col-md-auto">Status</th>

                    <th class="col-md-auto text-center"></th>
                    <th class="col-md-auto text-center"></th>
                </tr>
            </thead>
            <tbody>
                @{
                    if (ViewData["ManageObservations"] != null)
                    {

                        foreach (var item in (dynamic)(ViewData["ManageObservations"]))
                        {
                            <tr id="@item.OBS_ID">
                                <td class="text-center">@item.MEMO_NO</td>
                                <td>@item.PROCESS</td>
                                <td>@item.SUB_PROCESS</td>
                                <td>@item.Checklist_Details</td>
                                <td>@item.NO_OF_INSTANCES</td>
                                <td class="d-none entity_name_field">@item.ENTITY_NAME</td>
                                <td class="d-none period_name_field">@item.PERIOD</td>
                                <td>@item.OBS_RISK</td>
                                <td>@item.OBS_STATUS</td>
                                <td class="text-center"><a onclick="ObservationViewerPanel(@item.OBS_ID,@item.OBS_STATUS_ID, @item.OBS_RISK_ID)" href="#" class="text-hover">View Memo</a></td>
                                <td class="text-center"><a onclick="ObservationUpdatePanel(@item.OBS_ID )" href="#" class="text-hover">Edit Memo</a></td>
                            </tr>
                        }
                    }
                }
            </tbody>

        </table>
    </div>

</div>
<div id="commentsBox" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Auditor Comments</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="commentAreaInCommentsBox">Comments</label>
                        <textarea class="form-control" rows="4" id="commentAreaInCommentsBox" placeholder="Enter Comments here.."></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button onclick="finalCommentsButtonSave();" id="finalCommentsButtonSave" type="button" class="btn btn-danger">Submit</button>
            </div>
        </div>
    </div>
</div>


<div id="viewMemoModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Observation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="viewMemo_annex" class="font-weight-bold">Annexure</label>
                        <select id="viewMemo_annex" disabled="disabled" class="form-select form-control">
                            <option selected="selected" value="0" id="0">--Select Annexure--</option>
                            @{
                                if (ViewData["AnnexList"] != null)
                                {

                                    foreach (var item in (dynamic)(ViewData["AnnexList"]))
                                    {
                                        <option id="@item.ID" value="@item.ID">@item.ANNEX</option>
                                    }

                                }
                            }

                        </select>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_process" class="font-weight-bold">Process</label>
                        <div id="viewMemo_process" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_subprocess" class="font-weight-bold">Sub Process</label>
                        <div id="viewMemo_subprocess" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_violation" class="font-weight-bold">Checklist Details</label>
                        <div id="viewMemo_violation" disabled="disabled" style="max-height: 100px; height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_memo" class="font-weight-bold">Memo</label>
                        <div id="viewMemo_memo" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_risk">Risk</label>
                        <select id="viewMemo_risk" disabled="disabled" class="form-select form-control" aria-label="Default select example">
                            <option value="0" id="0" selected>--Select Risk Category--</option>
                            @{
                                if (ViewData["RiskList"] != null)
                                {

                                    foreach (var risk in (dynamic)(ViewData["RiskList"]))
                                    {
                                        <option id="@risk.R_ID" value="@risk.R_ID">@risk.DESCRIPTION</option>
                                    }

                                }
                            }
                        </select>


                    </div>
                    <div class="form-group">
                        <label for="viewMemo_respPP" class="font-weight-bold">Responsible Personals</label>
                        <div class="col-md-12 pl-0 pr-0">
                            <table id="listofRespPersons" class="table table-hover table-bordered table-hover mt-3 table-striped">
                                <thead style="background-color: rgb(181 229 117 / 93%) !important; ">
                                    <tr>
                                        <th class="col-md- auto font-weight-bold">Sr.No</th>
                                        <th class="col-md- auto font-weight-bold">P.P. No</th>
                                        <th class="col-md- auto font-weight-bold">Name</th>
                                        <th class="col-md- auto font-weight-bold">Loan Case</th>
                                        <th class="col-md- auto font-weight-bold">LC Amount</th>
                                        <th class="col-md- auto font-weight-bold">Account No.</th>
                                        <th class="col-md- auto font-weight-bold">ACC Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="viewMemo_response" class="font-weight-bold">Auditee Response</label>
                        <div id="viewMemo_response" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div id="evidenceViewer" class="input-field">
                        <label class="font-weight-bold">Evidences</label>
                        <div class="row col-md-12 mt-3 mb-3">
                            <div id="complianceCycleEvidences">
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="dropButton_memoReply" onclick="dropObservation(g_obsId,7,g_riskId);" type="button" data-dismiss="modal" class="btn btn-danger d-none">Drop Observation</button>
                <button id="submitAuditeeButton_memoReply" onclick="submitObservationToAuditee(g_obsId, 2, g_riskId);" type="button" data-dismiss="modal" class="btn btn-danger d-none">Submit to Auditee</button>
                @*  <button id="createDSAButton_memoReply" onclick="createDSA(g_obsId);" type="button" data-dismiss="modal" class="btn btn-success">Create DSA</button> *@

                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="updateMemoModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Update Observation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label>Annexure</label>
                        <div class="row col-md-12 w-100 m-0 p-0">
                            <select id="updateMemo_annex" class="form-select form-control">
                                <option selected="selected" value="0" id="0">--Select Annexure--</option>
                                @{
                                    if (ViewData["AnnexList"] != null)
                                    {

                                        foreach (var item in (dynamic)(ViewData["AnnexList"]))
                                        {
                                            <option id="@item.ID" value="@item.ID">@item.ANNEX</option>
                                        }

                                    }
                                }

                            </select>
                        </div>

                    </div>

                    <div class="form-group">
                        <label for="updateMemo_process" class="font-weight-bold">Process</label>
                        <select id="updateMemo_process" onchange="getSubProcessList();" class="form-select form-control" aria-label="Default select example">
                            <option value="0" id="0" selected="selected">--Select Voilation Category--</option>
                            @{
                                if (ViewData["ProcessList"] != null)
                                {
                                    foreach (var item in (dynamic)(ViewData["ProcessList"]))
                                    {
                                        <option id="@item.T_ID" value="@item.T_ID">@item.HEADING</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="updateMemo_subprocess" class="font-weight-bold">Sub Process</label>
                        <select id="updateMemo_subprocess" onchange="getSubProcessViolationList();" class="form-select form-control" aria-label="Default select example">
                        </select>

                    </div>
                    <div class="form-group">
                        <label for="updateMemo_violation" class="font-weight-bold">Checklist Details</label>
                        <select id="updateMemo_violation" class="form-select form-control" aria-label="Default select example">
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="updateMemo_heading" class="font-weight-bold">Title / Heading</label>
                        <input id="updateMemo_heading" class="form-control" />
                    </div>
                    <div class="form-group">
                        <label for="updateMemoContent" class="font-weight-bold">Memo</label>
                        <textarea id="updateMemoContent" rows="5" class="form-control">

                        </textarea>
                    </div>
                    <div class="form-group">
                        <label for="updateMemo_risk">Risk</label>
                        <select id="updateMemo_risk" class="form-select form-control" aria-label="Default select example">
                            <option value="0" id="0" selected>--Select Risk Category--</option>
                            @{
                                if (ViewData["RiskList"] != null)
                                {

                                    foreach (var risk in (dynamic)(ViewData["RiskList"]))
                                    {
                                        <option id="@risk.R_ID" value="@risk.R_ID">@risk.DESCRIPTION</option>
                                    }

                                }
                            }
                        </select>
                    </div>

                </form>
            </div>
            <div class="modal-footer">

                <button id="updateMemoContent_submit" onclick="finalUpdateMemoContent(g_obsId);" type="button" data-dismiss="modal" class="btn btn-danger">Update Memo Text</button>

                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>