@{
    ViewData["Title"] = "Observation Assigned";
    Layout = "_Layout";
}

<script type="text/javascript">
    var g_obsId = 0;
    var g_obsTextId = 0;
    var g_obsList = [];
    var g_imgFiles = null;
    var g_imgLoader = null;
    var productImagesArr = [];
    var g_allAttachedImages = [];

    $(document).ready(function () {
       
        $('#viewMemo_reply').richText({
            imageUpload: false,
            fileUpload: false,
            videoEmbed: false,
            urls: false
        });

        $("aks-file-upload").aksFileUpload({
            fileUpload: "#uploadfile", // With target [input]file or [type]json you can save the data of loaded items
            fileType: ["pdf", "docx", "rtf", "jpg", "jpeg", "png","ppt","doc","pptx","jpg","zip","csv"], // allowed file formats
            dragDrop: true, // drag & drop upload
            maxSize: "10 MB", // maximum uploaded file size
            multiple: true, // multiple file upload
            maxFile: 100, // maximum number of uploaded files
            maxFileError: "File exceeds upload limit. - Max limit:", // error text
            maxSizeError: "File exceeds size. - Max limit:", // error text
            fileTypeError: "Disallowed file format.", // error text
            label: "Drag & Drop your files or Browse" // label text

        });
      
        document.getElementById('aksfileupload').addEventListener('change', function () {
            var g_imgFiles = this.files;
           
            function readFileAsDataURL(file) {
                return new Promise((resolve, reject) => {
                    const reader = new FileReader();
                    reader.onload = () => resolve(reader.result.split(',')[1]); // get Base64 string without prefix
                    reader.onerror = reject;
                    reader.readAsDataURL(file);
                });
            }

            async function processFiles(files) {
                const productImagesArr = [];
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    try {
                        const base64Data = await readFileAsDataURL(file);
                        const ProductObject = {
                            'OBS_ID': g_obsId,
                            'OBS_TEXT_ID': g_obsTextId,
                            'IMAGE_NAME': g_obsTextId+"-"+file.name,
                            'IMAGE_DATA': base64Data,
                            'IMAGE_TYPE': file.type,
                            'LENGTH': file.size,
                            'SEQUENCE': i
                        };
                        productImagesArr.push(ProductObject);
                        g_allAttachedImages.push(ProductObject);
                    } catch (error) {
                        
                    }
                }
                uploadFiles(productImagesArr);
                }

            function uploadFiles(productImagesArr) {
                $.ajax({
                    url: g_asiBaseURL + "/UploadFile/UploadFiles",
                    type: 'POST',
                    dataType: "json",
                    data: {
                        "files": productImagesArr
                    },
                    success: function (response) {
                        $(".aks-file-upload .aks-file-upload-delete").on("click", function (e) {

                          
                            var filename = g_obsTextId + "-" + $(this).attr("data-delete");
                            deleteFileFromServer(filename);
                        });
                     
                    },
                    error: function (error) {
                        
                    }
                });
            }


            processFiles(g_imgFiles);
        });

    });

    function deleteImageObjectByFileName(fileName) {
        const index = g_allAttachedImages.findIndex(image => image.IMAGE_NAME === fileName);
        if (index !== -1) {
            g_allAttachedImages.splice(index, 1);
        }
    }
    function deleteFileFromServer(fileName) {
        deleteImageObjectByFileName(fileName);
        $.ajax({
            url: g_asiBaseURL + "/UploadFile/DeleteFile",
            type: 'POST',
            data: { "fileName": fileName },
            dataType: 'json',
            success: function (response) {
                
            },
            error: function (error) {

            }
        });
    }
    function getEntityObservation() {
        $('#manageObsPanel tbody').empty();
        if ($('#entitySelectField option:selected').val() != 0) {
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/get_assigned_observation",
                type: "POST",
                data: {
                    'ENG_ID': $('#entitySelectField option:selected').val()
                },
                cache: false,
                success: function (data) {
                    g_obsList = data;
                    $.each(data, function (i, v) {
                        v.memO_DATE = v.memO_DATE.split(' ')[0];
                        v.memO_REPLY_DATE = v.memO_REPLY_DATE.split(' ')[0];
                        if (v.caN_REPLY == 1) {
                            if (v.editable == 1)
                                $('#manageObsPanel tbody').append('<tr id="assignedObRow_' + v.obS_ID + '"><td>' + v.memO_NUMBER + '</td><td>' + v.audiT_YEAR + '</td><td>' + v.entitY_NAME + '</td><td class="text-center">' + v.memO_DATE + '</td><td class="text-center">' + v.gist + '</td><td class="text-center">' + v.memO_REPLY_DATE + '</td><td class="text-center">' + v.status + '</td><td class="text-center"><a onclick="event.preventDefault();showMemo(' + v.obS_ID + ',' + v.obS_TEXT_ID + ',' + v.responsE_ID + ');" class="text-hover font-weight-bold text-success">Update Reply</a></td></tr>');
                            else
                                $('#manageObsPanel tbody').append('<tr id="assignedObRow_' + v.obS_ID + '"><td>' + v.memO_NUMBER + '</td><td>' + v.audiT_YEAR + '</td><td>' + v.entitY_NAME + '</td><td class="text-center">' + v.memO_DATE + '</td><td class="text-center">' + v.gist + '</td><td class="text-center">' + v.memO_REPLY_DATE + '</td><td class="text-center">' + v.status + '</td><td class="text-center"><a onclick="event.preventDefault();showMemo(' + v.obS_ID + ',' + v.obS_TEXT_ID + ',' + v.responsE_ID + ');" class="text-hover font-weight-bold text-success">Reply</a></td></tr>');
                        } else {
                            if (v.editable == 1)
                                $('#manageObsPanel tbody').append('<tr id="assignedObRow_' + v.obS_ID + '"><td>' + v.memO_NUMBER + '</td><td>' + v.audiT_YEAR + '</td><td>' + v.entitY_NAME + '</td><td class="text-center">' + v.memO_DATE + '</td><td class="text-center">' + v.gist + '</td><td class="text-center">' + v.memO_REPLY_DATE + '</td><td class="text-center">' + v.status + '</td><td class="text-center"><a onclick="event.preventDefault();showMemo(' + v.obS_ID + ',' + v.obS_TEXT_ID + ',' + v.responsE_ID + ');" class="text-hover font-weight-bold text-success">Update Reply</a></td></tr>');
                            else
                                $('#manageObsPanel tbody').append('<tr id="assignedObRow_' + v.obS_ID + '"><td>' + v.memO_NUMBER + '</td><td>' + v.audiT_YEAR + '</td><td>' + v.entitY_NAME + '</td><td class="text-center">' + v.memO_DATE + '</td><td class="text-center">' + v.gist + '</td><td class="text-center">' + v.memO_REPLY_DATE + '</td><td class="text-center">' + v.status + '</td><td class="text-center"><a onclick="event.preventDefault();showMemo(' + v.obS_ID + ',' + v.obS_TEXT_ID + ',' + v.responsE_ID + ');" class="text-hover font-weight-bold text-success">View</a></td></tr>');
                        }
                    });

                    setTimeout(function () {
                        if (g_obsId != 0) {
                            var rowpos = $('#assignedObRow_' + g_obsId).position();
                            $('html').scrollTop(rowpos.top);
                        }
                    }, 200)
                },
                dataType: "json",
            });

        }
    }

    function reloadLocation() {
        getEntityObservation();
    }
    function showMemo(obs_id, obs_text_id, resp_id) {
        var memo_number, canReply, gist, editable;

        g_obsId = obs_id;
        g_obsTextId = obs_text_id;
        g_respId = resp_id;
        $.each(g_obsList, function (i, v) {
            if (v.obS_ID == obs_id) {
                gist = v.gist;
                memo_number = v.memO_NUMBER;
                canReply = v.caN_REPLY;
                editable = v.editable;
            }
        });

        $.ajax({
            url: g_asiBaseURL + "/ApiCalls/get_observation_text",
            type: "POST",
            data: {
                'OBS_ID': g_obsId,
                'RESP_ID': g_respId
            },
            cache: false,
            success: function (data) {

                $('#viewMemoModel').modal('show');
                $('#viewMemo_memo').html(data[0]);
                $('#viewMemo_memoNumber').val(memo_number);
                $('#viewMemo_memoGist').val(gist);
                if (canReply == 1) {
                    $('#replyButton_memoReply').removeClass('d-none');
                    $('#viewMemo_responded').parent().addClass('d-none');
                    $('#replyrichTextWrapper').removeClass('d-none');
                    $('#viewMemo_reply').val(data[1]).trigger('change');
                    //  $('#evidenceViewer').addClass('d-none');
                    $('#evidenceUploader').removeClass('d-none');

                }
                else {
                    if (editable == 1) {
                        $('#replyButton_memoReply').removeClass('d-none');
                        $('#viewMemo_responded').parent().addClass('d-none');
                        $('#replyrichTextWrapper').removeClass('d-none');
                        $('#viewMemo_reply').val(data[1]).trigger('change');
                        //$('#evidenceViewer').removeClass('d-none');
                        $('#evidenceUploader').addClass('d-none');

                    } else {
                        $('#replyButton_memoReply').addClass('d-none');
                        $('#viewMemo_responded').parent().removeClass('d-none');
                        $('#replyrichTextWrapper').addClass('d-none');
                        $('#viewMemo_responded').html(data[1]);
                        //$('#evidenceViewer').removeClass('d-none');
                        $('#evidenceUploader').addClass('d-none');
                    }

                }

                var auctionImages = [];
                $('#evidencePortal').empty();
                if(data[2].length>0){
                    $('#evidenceViewer').removeClass('d-none');
                }
                $.each(data[2], function (i, v) {                    
                    $('#evidencePortal').append('<div style="display:inline-block, height:190px; width:190px, border: 2px dashed; margin:5px;"><img style="height:184px; width:184px;" src="data: ' + v.imagE_TYPE + '; base64,' + v.imagE_DATA + '" /></div>')
                });

            },
            dataType: "json",
        });
    }  
    function replyMemo() {       
        var replyTxt = ($('#viewMemo_reply').val()).length;
        if (replyTxt > 0) {
            $.ajax({
                url: g_asiBaseURL + "/ApiCalls/reply_observation",
                type: "POST",
                data: {
                    'AU_OBS_ID': g_obsId,
                    'OBS_TEXT_ID': g_obsTextId,
                    'REPLY': $('#viewMemo_reply').val(),
                    'EVIDENCE_LIST': g_allAttachedImages
                },
                cache: false,
                success: function (data) {
                    alert("Reply sent successfuly");
                    onAlertCallback(reloadLocation);

                },
                dataType: "json",
            });
        } else {
            alert("Provide your comments to proceed");
            return false;
        }

    }

</script>
<div class="row col-md-12">
    <div class="row col-md-12 mt-3">
        <h3 style="color: #45c545;">Assigned Observations</h3>
    </div>
    <div class="row col-md-12 mt-3">
        <div class="col-md-2">
            <label><b>Entity:</b></label>
        </div>
        <div class="col-md-10">
            <input id="entityNameField" disabled="disabled" class="form-control ml-1 d-none" type="text" />
            <select id="entitySelectField" onchange="getEntityObservation()" class="form-control form-select">
                <option value="0" id="0">--Select Audit Entity--</option>
                @{
                    if (ViewData["EntitiesList"] != null)
                    {
                        foreach (var item in (dynamic)(ViewData["EntitiesList"]))
                        {
                                            <option value="@item.ENG_ID" id="@item.ENG_ID">@item.NAME</option>
                        }
                    }
                }

            </select>
        </div>
    </div>
    <div class="row col-md-12 mt-3">

        <table id="manageObsPanel" class="table table-hover table-bordered table-hover mt-3 table-striped">
            <thead style="background-color: rgb(181 229 117 / 93%) !important; ">
                <tr>
                    <th class="col-md-auto text-center">Memo #</th>
                    <th class="col-md-auto text-center">Audit Year</th>
                    <th class="col-md-auto text-center">Assigned to</th>
                    <th class="col-md-auto text-center">Memo Date</th>
                    <th class="col-md-auto text-center">Gist  </th>
                    <th class="col-md-auto text-center">Reply Till  </th>
                    <th class="col-md-auto text-center">Status</th>
                    <th class="col-md-auto text-center"></th>
                </tr>
            </thead>
            <tbody>
            </tbody>
        </table>
    </div>
</div>


<div id="viewMemoModel" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl" role="document">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">Observation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="viewMemo_memoNumber">Memo Number</label>
                        <input id="viewMemo_memoNumber" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_memoNumber">Gist</label>
                        <input id="viewMemo_memoGist" class="form-control" disabled="disabled" />
                    </div>
                    <div class="form-group">
                        <label for="viewMemo_memo">Memo</label>
                        <div id="viewMemo_memo" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div class="form-group d-none">
                        <label for="viewMemo_responded">Management Response</label>
                        <div id="viewMemo_responded" disabled="disabled" style="height: auto; overflow-y: auto;" class="form-control"></div>
                    </div>
                    <div id="replyrichTextWrapper" class="form-group">
                        <label for="viewMemo_reply">Reply</label>
                        <textarea id="viewMemo_reply" style="max-height:150px; height:auto;" class="form-control"></textarea>
                    </div>
                    <div id="evidenceUploader" class="input-field d-none">
                        <label class="active">Evidences</label>
                        <!--Image container -->
                        <aks-file-upload></aks-file-upload>

                    </div>
                    <div id="evidenceViewer" class="input-field d-none">
                        <label class="active">Evidences</label>
                        <!--Image container -->
                        <div id="evidencePortal" class="row col-md-12">
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button id="replyButton_memoReply" onclick="replyMemo();" type="button" data-dismiss="modal" class="btn btn-danger">Reply</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

